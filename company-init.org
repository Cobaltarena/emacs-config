#+TITLE: Company-mode and its dependencies

** Company
Major mode for completion when programming.
#+BEGIN_SRC emacs-lisp
  (use-package company
    :config
    (setq company-selection-wrap-around +1
          company-tooltip-minimum-width 60
          company-tooltip-maximum-width 60)
    (define-key company-active-map (kbd "RET") nil)
    (define-key company-active-map (kbd "<return>") nil)
    (define-key company-active-map (kbd "<right>") #'company-complete-selection)
    (define-key company-active-map (kbd "C-c c") #'company-complete)
    :custom-face
    (company-tooltip (
                      (t (:background "#332211")))
                     )
    )
#+END_SRC emacs-lisp
** Company-irony
Irony backend for C and C++ completion
#+BEGIN_SRC emacs-lisp
  (use-package company-irony
    :config
    (eval-after-load 'company
      '(add-to-list 'company-backends 'company-irony))
    (eval-after-load 'company
      '(add-to-list 'company-backends 'company-irony-c-headers))
    )
#+END_SRC
** TODO Irony (move this elsewhere)
#+BEGIN_SRC emacs-lisp
  (use-package irony
    :config
    (add-hook 'c++-mode-hook 'irony-mode)
    (add-hook 'c-mode-hook 'irony-mode)
    (add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)
    )
#+END_SRC
** TODO Irony-eldoc (move this elsewhere)
#+BEGIN_SRC emacs-lisp

  (use-package irony-eldoc
    :config
    (add-hook 'irony-mode-hook #'irony-eldoc)
    )
#+END_SRC
** Prescient
Cool minor-mode to order the completion propositions by frequency of use. 
#+BEGIN_SRC emacs-lisp
  (use-package company-prescient
    :after company
    :config
    (setq company-prescient-mode 1)
    )
#+END_SRC
** Company-jedi
Python backend for some completion when python-mode is enabled.
#+BEGIN_SRC emacs-lisp
  (use-package company-jedi
    :config
    (eval-after-load 'company
      '(add-to-list 'company-backends 'company-jedi))
    (add-hook 'python-mode-hook 'jedi-mode)
    )
#+END_SRC
** Eval after load
#+BEGIN_SRC emacs-lisp
  (cb/add-hooks (list #'c++-mode-hook
                       #'c-mode-hook
                       #'lisp-mode-hook
                       #'org-mode-hook
                       #'python-mode-hook
                       #'rust-mode-hook))
#+END_SRC
